// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace PizzaOrdering.Migrations
{
    [DbContext(typeof(PizzaOrderContext))]
    [Migration("20240519174018_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("DailyPizzaLimit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Limit")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PizzaId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PizzaId1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SoldCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId1");

                    b.ToTable("DailyPizzaLimits");
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PizzaId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PizzasId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PizzasId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PizzaId")
                        .HasColumnType("TEXT");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Classic tomato and mozzarella cheese",
                            Name = "Margherita",
                            PizzaId = new Guid("4a51ff6b-5f0c-4d03-a54d-2bfb55ae368b"),
                            Price = 8.99f
                        },
                        new
                        {
                            Id = 2,
                            Description = "Pepperoni and cheese on tomato sauce",
                            Name = "Pepperoni",
                            PizzaId = new Guid("4b4f7006-7960-4020-bcac-2b829730e494"),
                            Price = 9.99f
                        },
                        new
                        {
                            Id = 3,
                            Description = "Mixed vegetables and cheese on tomato sauce",
                            Name = "Vegetarian",
                            PizzaId = new Guid("d22f83af-431a-482d-b22f-8a9f5ab45879"),
                            Price = 9.99f
                        });
                });

            modelBuilder.Entity("DailyPizzaLimit", b =>
                {
                    b.HasOne("Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId1");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.HasOne("Pizza", "Pizzas")
                        .WithMany("Orders")
                        .HasForeignKey("PizzasId");

                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("Pizza", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
